# chapter3.model { #libs.chapter3.model }

`chapter3.model`

Defines a model to manage the reports generated by the machine and deep learning models.

## Classes

| Name | Description |
| --- | --- |
| [ActivityMetric](#libs.chapter3.model.ActivityMetric) | Enumeration for each metric of interest from the model reports for individual activities. Values: PRECISION, RECALL, F1, SUPPORT. |
| [Filter](#libs.chapter3.model.Filter) | Class to represent a filter that can be applied to a dataframe of reports |
| [Model](#libs.chapter3.model.Model) | Enumeration to represent the ML and DL models. Values: MLP, CNN, LSTM, CNN_LSTM. |
| [ModelMetric](#libs.chapter3.model.ModelMetric) | Enumeration for each metric of interest from the model reports. Values: ACCURACY, TRAINING_TIME. |
| [Source](#libs.chapter3.model.Source) | Enumeration to represent the data sources. Values: SP, SW, FUSED. |
| [TargetFilter](#libs.chapter3.model.TargetFilter) | Enumeration for each attribute of interest from the model reports. Values: MODEL, SEATED, STANDING_UP, WALKING, TURNING, SITTING_DOWN. |

### ActivityMetric { #libs.chapter3.model.ActivityMetric }

`chapter3.model.ActivityMetric()`

Enumeration for each metric of interest from the model reports for individual activities. Values: PRECISION, RECALL, F1, SUPPORT.

### Filter { #libs.chapter3.model.Filter }

`chapter3.model.Filter(self, model, source, target, metric)`

Class to represent a filter that can be applied to a dataframe of reports

#### Attributes

| Name   | Type   | Description                                                                                          |
|--------|--------|------------------------------------------------------------------------------------------------------|
| model  | str    | Model to look for. One of `libs.chapter3.model.Model`                                                |
| source | str    | Source to look for. One of `libs.chapter3.model.Source`                                              |
| target | str    | Target to look for. One of `libs.chapter3.model.TargetFilter`.                                       |
| metric | str    | Metric to look for. One of `libs.chapter3.model.ModelMetric` or `libs.chapter3.model.ActivityMetric` |

#### Methods

| Name | Description |
| --- | --- |
| [apply](#libs.chapter3.model.Filter.apply) | Function to apply the filter to a specified dataframe. |

##### apply { #libs.chapter3.model.Filter.apply }

`chapter3.model.Filter.apply(df)`

Function to apply the filter to a specified dataframe.

###### Parameters

| Name   | Type               | Description    | Default    |
|--------|--------------------|----------------|------------|
| `df`   | `pandas.DataFrame` | Model reports. | _required_ |

###### Returns

| Type               | Description             |
|--------------------|-------------------------|
| `pandas.DataFrame` | Filtered model reports. |

### Model { #libs.chapter3.model.Model }

`chapter3.model.Model()`

Enumeration to represent the ML and DL models. Values: MLP, CNN, LSTM, CNN_LSTM.

### ModelMetric { #libs.chapter3.model.ModelMetric }

`chapter3.model.ModelMetric()`

Enumeration for each metric of interest from the model reports. Values: ACCURACY, TRAINING_TIME.

### Source { #libs.chapter3.model.Source }

`chapter3.model.Source()`

Enumeration to represent the data sources. Values: SP, SW, FUSED.

### TargetFilter { #libs.chapter3.model.TargetFilter }

`chapter3.model.TargetFilter()`

Enumeration for each attribute of interest from the model reports. Values: MODEL, SEATED, STANDING_UP, WALKING, TURNING, SITTING_DOWN.