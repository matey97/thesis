"""Data preprocessing script for StanWiFi dataset.

Processes the raw data by processing the windows generated by the author's scripts using DBSCAN for outlier detection
and 2-level DWT for threshold based filtering.

**Example**:

    $ python 01_2_stanwifi-processing.py 
        --input_data_path <PATH_OF_RAW_DATA> 
        --windowed_data_path <PATH_TO_STORE_RESULTS>
"""

import argparse
import os
import sys

sys.path.append("../../..")

import numpy as np

from cross_vali_input_data import csv_import
from libs.chapter5.pipeline.processing import proposed_method


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--windowed_data_path', help='Path to store windowed data', type=str, required=True)
    args = parser.parse_args()
    
    x_bed, x_fall, x_pickup, x_run, x_sitdown, x_standup, x_walk, \
    y_bed, y_fall, y_pickup, y_run, y_sitdown, y_standup, y_walk = csv_import()

    x_subsets = [x_bed, x_fall, x_run, x_sitdown, x_standup, x_walk]
    y_subsets = [y_bed, y_fall, y_run, y_sitdown, y_standup, y_walk]

    x_proc = []
    y_proc = []
    for x, y in zip(x_subsets, y_subsets):
        x_proc.append(proposed_method(x))
        y_proc.append(np.delete(y, [0,4], axis=1))

    x = np.vstack(x_proc)
    x = np.transpose(x, axes=(0,2,1))
    y = np.vstack(y_proc)

    np.save(os.path.join(args.windowed_data_path, 'x.npy'), x)
    np.save(os.path.join(args.windowed_data_path, 'y.npy'), y)